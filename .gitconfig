# https://git-scm.com/docs/git-config
[user]
	name = Adam McLain
	email = atommclain@gmail.com
[core]
	excludesfile = ~/.gitignore_global
	autocrlf = input
	safecrlf = true
	whitespace = trailing-space,space-before-tab,tab-in-indent
	attributesfile = ~/.gitattributes
[init]
	templateDir = ~/.git_template
[advice]
	statusHints = false
[branch]
	autosetuprebase = always
[color]
	diff = auto
	status = auto
	branch = auto
	ui = auto
[color "diff"]
	meta = white
	frag = white
	new = green
[color "status"]
	branch = yellow
	upstream = bold blue
[commit]
	verbose = true
	gpgsign = false
	# template = ~/.gitmessage
[credential]
	helper = osxkeychain
[diff]
	wsErrorHighlight = new
	mnemonicprefix = true
	algorithm = histogram
[diff "exif"]
	textconv = exiftool -s -G --File:FileModifyDate --File:FileInodeChangeDate --File:Directory --File:FileName --File:FileAccessDate --PNG:ModifyDate --PNG:Datecreate --PNG:Datemodify
[diff "plist"]
	textconv = plutil -convert xml1 -o -
[diff "swift"]
	xfuncname = "^ *(\\w+ +)*((class|struct|enum|protocol|extension|func) +|(de)?init\\b).*$"
[difftool]
	prompt = false
[fetch]
	prune = true
[grep]
	lineNumber = true
	extendRegexp = true
[help]
	autocorrect = 1
[interactive]
	singleKey = true
	#diffFilter = delta --color-only --features=interactive
[merge]
	tool = vimdiff
	guitool = Kaleidoscope
[mergetool]
	prompt = false
	keepBackup = false
[pager]
	#diff = delta
	#log = delta
	#reflog = delta
	#show = delta
[push]
	default = current
	autoSetupRemote = true
[rerere]
	enabled = true
[rebase]
	autostash = true
	autosquash = true
	missingCommitsCheck = warn
[stash]
	showPatch = true
[status]
	showUntrackedFiles = all
	showStash = true
[submodule]
	recurse = true
[alias]
	# list git aliases
	alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
	hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
	type = cat-file -t
	dump = cat-file -p
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	lgtest = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %<(72,trunc) %s %Cgreen(%cd, %cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=short
	devlog = !git --no-pager log --pretty=format:\"%h %ad | %s%d [%an]\" --date=short develop..$(git branch-name)
	d = difftool
	diff-highlight = "!f() { git diff \"$@\" | ~/bin/diff-highlight; }; f" --color | less
	# Get the current branch name (not so useful in itself, but used in other aliases)
	branch-name = "!git rev-parse --abbrev-ref HEAD"
	# Current branch url encoded
	# Rev and cut are to remove trailing whitespace since git is using #/bin/sh, also exta / added to sed
	# If running from bash we could remove rev/cut and use echo -ne
	# https://stackoverflow.com/a/55576846
	branch-urlencode = !echo $(git rev-parse --abbrev-ref HEAD) | xxd -plain | rev | cut -c3- | rev | tr -d '\n' | sed 's/\\(..\\)/%\\1/g'
	# Push the current branch to the remote "origin", and set it to track
	# the upstream branch
	publish = "!git push --set-upstream origin $(git branch-name)"
	# Delete the remote version of the current branch
	unpublish = "!git push origin :$(git branch-name)"
	safe-force = push --force-with-lease
	# The first commit of a repository can not be rebased like regular commits,
	# so it’s good practice to create an empty commit as your repository root.
	it = !git init && git commit -m “root” --allow-empty
	# List your most recently-used branches using Git
	# http://ses4j.github.io/2020/04/01/git-alias-recent-branches/
	lb = !git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep 'checkout:' | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[$1]++' | head -n 10 | awk -F' ~ HEAD@{' '{printf(\"  \\033[33m%s: \\033[37m %s\\033[0m\\n\", substr($2, 1, length($2)-1), $1)}'
	fix-conflicts = "!$EDITOR `git diff --name-only --diff-filter=U`"
	# update develop branch from remote even if on a different branch
	update-develop = "!git fetch origin develop:develop"
	gone = ! git fetch -p && git for-each-ref --format '%(refname:short) %(upstream:track)' | awk '$2 == \"[gone]\" {print $1}' | xargs  git branch -D | echo \"Done.\"
[delta]
	features = decorations
	#plus-style = "syntax #012800"
	#minus-style = "syntax #340001"
	syntax-theme = zenburn
	navigate = true
	line-numbers = true
	colorMoved = default
	whitespace-error-style = 22 reverse
[delta "decorations"]
	commit-decoration-style = blue ol
	commit-style = raw
	file-style = omit
	hunk-header-decoration-style = blue box
	hunk-header-line-number-style = "#067a00"
	hunk-header-style = file line-number syntax
[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true
