[user]
	name = Adam McLain
	email = atommclain@gmail.com
[color]
	diff = auto
	status = auto
	branch = auto
	ui = auto
[color "diff"]
	meta = white
	frag = white
	commit = reverse white
	new = green
[color "status"]
	branch = yellow
	upstream = bold blue
[core]
	excludesfile = ~/.gitignore_global
	autocrlf = input
	safecrlf = true
	whitespace = trailing-space,space-before-tab,tab-in-indent
[alias]
	# list git aliases
	alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
	hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
	type = cat-file -t
	dump = cat-file -p
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	lgtest = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %<(72,trunc) %s %Cgreen(%cd, %cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=short
	d = difftool
	diff-highlight = "!f() { git diff \"$@\" | ~/bin/diff-highlight; }; f" --color | less
	# Get the current branch name (not so useful in itself, but used in other aliases)
	branch-name = "!git rev-parse --abbrev-ref HEAD"
	# Push the current branch to the remote "origin", and set it to track
	# the upstream branch
	publish = "!git push --set-upstream origin $(git branch-name)"
	# Delete the remote version of the current branch
	unpublish = "!git push origin :$(git branch-name)"
	safeforce = push --force-with-lease
	# The first commit of a repository can not be rebased like regular commits,
	# so it’s good practice to create an empty commit as your repository root.
	it = !git init && git commit -m “root” --allow-empty
	# List your most recently-used branches using Git
	# http://ses4j.github.io/2020/04/01/git-alias-recent-branches/
	lb = !git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep 'checkout:' | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[$1]++' | head -n 10 | awk -F' ~ HEAD@{' '{printf(\"  \\033[33m%s: \\033[37m %s\\033[0m\\n\", substr($2, 1, length($2)-1), $1)}'
	fix-conflicts = "!$EDITOR `git diff --name-only --diff-filter=U`"
	# update develop branch from remote even if on a different branch
	update-develop = "!git fetch origin develop:develop"
[branch]
	autosetuprebase = always
[rerere]
	enabled = true
[help]
	autocorrect = 1
[push]
	default = current
[grep]
	lineNumber = true
	extendRegexp = true
[commit]
	gpgsign = false
	# template = ~/.gitmessage
[credential]
	helper = osxkeychain
[stash]
	showPatch = true
[status]
	showUntrackedFiles = all
	showStash = true
[advice]
	statusHints = false
[interactive]
	# apparently you need to install some perl crap for this to work
	singleKey = true
[diff]
	wsErrorHighlight = all
	mnemonicprefix = true
